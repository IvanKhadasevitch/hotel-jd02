<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">
    <persistence-unit name="by.ivan" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <!-- add classes -->
        <!--pojos-->
        <class>pojos.User</class>
        <class>pojos.Admin</class>
        <class>pojos.Hotel</class>
        <class>pojos.RoomType</class>
        <class>pojos.Room</class>
        <class>pojos.Order</class>
        <class>pojos.Bill</class>

        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <!--<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/jpadb?createDatabaseIfNotExist=true"/>-->
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/hotel_jd02?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;autoReconnect=true&amp;useSSL=false&amp;characterEncoding=UTF-8"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>
            <property name="hibernate.dialect.storage_engine" value="innodb"/>
            <!--create-drop: drop the schema when the SessionFactory is closed explicitly,-->
            <!--typically when the application is stopped USE for test-->
            <!--<property name="hibernate.hbm2ddl.auto" value="create-drop"/>-->
            <!--update: update the schema-->
            <property name="hibernate.hbm2ddl.auto" value="validate"/>

            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.connection.pool_size" value="10"/>

            <!--set transaction isolation level-->
            <!--2 изоляция уровня чтения подтвержденного-->
            <!--2 => JDBC isolation level: READ_COMMITTED-->
            <property name="hibernate.connection.isolation" value="2"/>

            <!--for hibernate cache level 2. Provider EhCache-->
            <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
            <!--true by Default. Use_second_level_cache -->
            <property name="hibernate.cache.use_second_level_cache" value="true"/>
            <!--false by Default. Use Query Cache -->
            <!--<property name="hibernate.cache.use_query_cache" value="true"/>-->
            <!--second-level cache mappings-->
            <property name="net.sf.ehcache.configurationResourceName" value="ehcache.xml"/>
        </properties>
    </persistence-unit>
</persistence>